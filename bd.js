const print=print=>{document.write(print)};const Print=print=>{document.write(print)};const cLog=cLog=>{console.log(cLog)};const echo=echo=>{document.write(echo)};const Echo=echo=>{document.write(echo)};const getAZ="ABCDRFGHIJKLMNOPQRSTUVWXYZ";const getaz="abcdefghijklmnopqrstuvwxyz";const getnum=123456789;const geta2z="ABCDRFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789";const copyit=textID=>{let text=document.querySelector(`${textID}`).innerText;let text_area=document.createElement("textarea");text_area.value=text;document.body.appendChild(text_area);text_area.select();document.execCommand("copy");document.body.removeChild(text_area)};const randomText=(textsize,showingID)=>{let storeText="";let letters=geta2z;for(var i=0;i<textsize;i++){storeText+=letters.charAt(Math.floor(Math.random()*letters.length))}let text=document.querySelector(`${showingID}`).innerText=storeText};const present_date=new Date;const thisTime=present_date.toLocaleTimeString();const nowdate=present_date.getDate();const nextdate=present_date.getDate()+1;const prevdate=present_date.getDate()-1;const thisMonth=present_date.getMonth()+1;const nextMonth=present_date.getMonth()+2;const prevMonth=present_date.getMonth();const thisYear=present_date.getFullYear();const nextYear=present_date.getFullYear()+1;const prevYear=present_date.getFullYear()-1;let thisDayName;switch((new Date).getDay()){case 0:thisDayName="Sunday";break;case 1:thisDayName="Monday";break;case 2:thisDayName="Tuesday";break;case 3:thisDayName="Wednesday";break;case 4:thisDayName="Thursday";break;case 5:thisDayName="Friday";break;case 6:thisDayName="Saturday"}let thisMonthName;switch((new Date).getMonth()){case 0:thisMonthName="January";break;case 1:thisMonthName="February";break;case 2:thisMonthName="March";break;case 3:thisMonthName="April";break;case 4:thisMonthName="May";break;case 5:thisMonthName="June";break;case 6:thisMonthName="July";break;case 7:thisMonthName="August";break;case 8:thisMonthName="September";break;case 9:thisMonthName="October";break;case 10:thisMonthName="November";break;case 11:thisMonthName="December";break}const getQuery=query=>{return document.querySelector(query)};const newArr=(data,data1)=>{return name=[data,data1]};const getArr=value1=>{value1.forEach(function(value,index){print(index+" : "+value+"<br>")})};const randomNum=size=>{return Math.floor(Math.random()*size+1)};const customRanNum=(min,max)=>{return Math.floor(Math.random()*(max-min+1))+min};const len=size=>{return size.length};const type=type=>{return typeof type};const setTag=(tagname,tagvalue)=>{const tagnames=tagname;const tagvalues=tagvalue;let createTagsonBody=document.createElement(tagnames);document.body.appendChild(createTagsonBody);createTagsonBody.innerText=tagvalues};const setArea=(areaname,areavalue,areaPlaceholder)=>{const areanames=areaname;const areavalues=areavalue;let createAreaonBody=document.createElement(areanames);document.body.appendChild(createAreaonBody);createAreaonBody.value=areavalues;createAreaonBody.placeholder=areaPlaceholder};const setCSS=(tagNameCss,cssTagClass)=>{let tagNameCssGet=getQuery(tagNameCss);let cssTagClassGet=`${cssTagClass}`;cLog(cssTagClassGet);tagNameCssGet.classList.add(cssTagClassGet)};const removeCSS=(tagNameCss,cssTagClass)=>{let tagNameCssGet=getQuery(tagNameCss);let cssTagClassGet=cssTagClass;tagNameCssGet.classList.remove(cssTagClassGet)};const checkArr=array=>{let userArr=Array.isArray(array);if(userArr==true){return"its array"}else{return"its not an array"}};const strPos=(name,values)=>{let userstr=`${name}`;let userval=`${values}`;return userstr.indexOf(userval)};const lastStrPos=(name,values)=>{let userstr=`${name}`;cLog(userstr);let userval=`${values}`;return userstr.lastIndexOf(userval)};const upperCase=name=>{let names=`${name}`;return names.toUpperCase()};const lowerCase=name=>{let names=`${name}`;return names.toLowerCase()};const trim=name=>{let names=`${name}`;return names.trim()};const toStr=name=>{let names=`${name}`;return names.toString()};const toNum=name=>{let names=`${name}`;return Number(names)};const toInt=name=>{let names=`${name}`;return parseInt(names)};const toFloat=name=>{let names=`${name}`;return parseFloat(names)};const rptStr=(name,value)=>{return name.repeat(value)};const getObj=a=>{for(var key in a){document.write(key+" : "+a[key]+"<br>")}};const PI=Math.PI;const setRound=value=>{return Math.round(value)};const setPower=(value1,value2)=>{return Math.pow(value1,value2)};const setRoot=value=>{return Math.sqrt(value)};const setAbs=value=>{return Math.abs(value)};const setMathUp=value=>{return Math.ceil(value)};const setMatDown=value=>{return Math.floor(value)};const setQbRoot=value=>{return Math.cbrt(value)};const getLess=(value1,value2)=>{if(value1<value2){return"true"}else{return"false"}};const getGreater=(value1,value2)=>{if(value1>value2){return"true"}else{return"false"}};const setLoopBrk=(value1,value2)=>{var text="";var i;for(i=0;i<value2;i++){if(i===value1){break}text+="The number is "+i+"<br>"}return text};const setLoopConti=(value1,value2)=>{var text="";var i;for(i=0;i<value2;i++){if(i===value1){continue}text+="The number is "+i+"<br>"}return text};const setHide=value=>{getQuery(value).style.display="none"};const setShow=value=>{getQuery(value).style.display=""};const scrXlen=screen.width+"px";const scrYlen=screen.height+"px";const urlRedirect=value=>{let values=value;window.location.assign(values)};const newElem=(value1,value2,value3)=>{let target=getQuery(`${value1}`);cLog(target);let elem=value2;let append=value3;target.insertAdjacentHTML(value3,elem)};const getOpt=value1=>{let option1=getQuery(value1);let showIT=option1.options[option1.selectedIndex].text;return showIT};